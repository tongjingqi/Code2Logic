[
    {
        "data_id": "jewel2-train-00001-0",
        "qa_type": "StateInfo",
        "question_id": 0,
        "question_description": "Count specific element",
        "image": "images/00001.png",
        "state": "states/00001.json",
        "plot_level": "Easy",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many 'A' elements are currently on the board?",
        "answer": "2",
        "analysis": "By iterating through each row and column of the chessboard, we identified and counted all occurrences of the 'A' element.The 'A' elements are located at the following positions: (2,1), (3,0).So there are  **2** 'A' in total.\n\n"
    },
    {
        "data_id": "jewel2-train-00001-1",
        "qa_type": "StateInfo",
        "question_id": 1,
        "question_description": "Identify element position",
        "image": "images/00001.png",
        "state": "states/00001.json",
        "plot_level": "Easy",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:**Which of the following positions does element 'D' reside in?\n\n**Options:**\nA. Position (1, 1)\nB. Position (2, 1)\nC. Position (3, 3)\nD. Position (2, 0)\nE. Position (2, 3)\nF. Position (3, 2)\nG. Position (0, 3)\nH. Position (0, 0)",
        "answer": "G",
        "analysis": "The 'D' element is located at the following positions: (0,2), (0,3), (1,3). Option G refers to position (0, 3), where the 'D' element resides.",
        "options": [
            "A. Position (1, 1)",
            "B. Position (2, 1)",
            "C. Position (3, 3)",
            "D. Position (2, 0)",
            "E. Position (2, 3)",
            "F. Position (3, 2)",
            "G. Position (0, 3)",
            "H. Position (0, 0)"
        ]
    },
    {
        "data_id": "jewel2-train-00001-2",
        "qa_type": "StateInfo",
        "question_id": 2,
        "question_description": "Count special elements",
        "image": "images/00001.png",
        "state": "states/00001.json",
        "plot_level": "Easy",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many special elements (a, b, c, d, e, +, |) are there on the board?",
        "answer": "1",
        "analysis": "By iterating through the chessboard, we counted all special elements (a, b, c, d, e, +, |).\n\nPositions of special elements:\n- Element 'a': None found\n- Element 'b': None found\n- Element 'c': None found\n- Element 'd': None found\n- Element 'e': (1,2)\n- Element '+': None found\n- Element '|': None foundSo there are **1** special element in total."
    },
    {
        "data_id": "jewel2-train-00001-3",
        "qa_type": "ActionOutcome",
        "question_id": 3,
        "question_description": "Simulate clear operation",
        "image": "images/00001.png",
        "state": "states/00001.json",
        "plot_level": "Easy",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute clear 1 2?\n\n**Options:**\nA. Nothing will happen because the clear does not meet elimination conditions.\nB. Trigger a special element, total cleared becomes 47.\nC. Perform elimination, eliminate 3 elements, total cleared becomes 49.\nD. Perform elimination, eliminate 5 elements, total cleared becomes 48.E. Perform elimination, eliminate 5 elements, total cleared becomes 48.\nF. Perform elimination, eliminate 2 elements, total cleared becomes 48.\nG. Perform elimination, eliminate 2 elements, total cleared becomes 47.\nH. Perform elimination, eliminate 3 elements, total cleared becomes 47.",
        "answer": "B",
        "analysis": "Clearing the special element 'e' at position (1,2) triggered its ability, resulting in the elimination of additional elements. The total cleared count increased to 47.",
        "options": [
            "A. Nothing will happen because the clear does not meet elimination conditions.",
            "B. Trigger a special element, total cleared becomes 47.",
            "C. Perform elimination, eliminate 3 elements, total cleared becomes 49.",
            "D. Perform elimination, eliminate 5 elements, total cleared becomes 48.E. Perform elimination, eliminate 5 elements, total cleared becomes 48.",
            "F. Perform elimination, eliminate 2 elements, total cleared becomes 48.",
            "G. Perform elimination, eliminate 2 elements, total cleared becomes 47.",
            "H. Perform elimination, eliminate 3 elements, total cleared becomes 47."
        ]
    },
    {
        "data_id": "jewel2-train-00001-4",
        "qa_type": "ActionOutcome",
        "question_id": 3,
        "question_description": "Simulate clear operation",
        "image": "images/00001.png",
        "state": "states/00001.json",
        "plot_level": "Easy",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute clear 1 2?\n\n**Options:**\nA. Nothing will happen because the clear does not meet elimination conditions.\nB. Trigger a special element, total cleared becomes 47.\nC. Perform elimination, eliminate 1 elements, total cleared becomes 47.\nD. Perform elimination, eliminate 4 elements, total cleared becomes 47.E. Perform elimination, eliminate 5 elements, total cleared becomes 49.\nF. Perform elimination, eliminate 4 elements, total cleared becomes 45.\nG. Perform elimination, eliminate 4 elements, total cleared becomes 48.\nH. Perform elimination, eliminate 5 elements, total cleared becomes 49.",
        "answer": "B",
        "analysis": "Clearing the special element 'e' at position (1,2) triggered its ability, resulting in the elimination of additional elements. The total cleared count increased to 47.",
        "options": [
            "A. Nothing will happen because the clear does not meet elimination conditions.",
            "B. Trigger a special element, total cleared becomes 47.",
            "C. Perform elimination, eliminate 1 elements, total cleared becomes 47.",
            "D. Perform elimination, eliminate 4 elements, total cleared becomes 47.E. Perform elimination, eliminate 5 elements, total cleared becomes 49.",
            "F. Perform elimination, eliminate 4 elements, total cleared becomes 45.",
            "G. Perform elimination, eliminate 4 elements, total cleared becomes 48.",
            "H. Perform elimination, eliminate 5 elements, total cleared becomes 49."
        ]
    },
    {
        "data_id": "jewel2-train-00001-5",
        "qa_type": "ActionOutcome",
        "question_id": 4,
        "question_description": "Simulate swap operation",
        "image": "images/00001.png",
        "state": "states/00001.json",
        "plot_level": "Easy",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute swap 2 3 left?\n\n**Options:**\nA. Nothing will happen because the swap does not meet elimination conditions.\nB. Cannot perform swap because one of the elements is special.\nC. After swap, elimination occurs, clearing 1 elements, total cleared becomes 49.\nD. After swap, elimination occurs, clearing 2 elements, total cleared becomes 49.\nE. After swap, elimination occurs, clearing 5 elements, total cleared becomes 49.\nF. After swap, elimination occurs, clearing 1 elements, total cleared becomes 47.\nG. After swap, elimination occurs, clearing 2 elements, total cleared becomes 47.\nH. After swap, elimination occurs, clearing 3 elements, total cleared becomes 49.",
        "answer": "A",
        "analysis": "Swapping the elements at position (2,3) with (2,2) in the 'left' direction did not create any valid elimination conditions. No elements were cleared, and the total cleared count remains unchanged.",
        "options": [
            "A. Nothing will happen because the swap does not meet elimination conditions.",
            "B. Cannot perform swap because one of the elements is special.",
            "C. After swap, elimination occurs, clearing 1 elements, total cleared becomes 49.",
            "D. After swap, elimination occurs, clearing 2 elements, total cleared becomes 49.",
            "E. After swap, elimination occurs, clearing 5 elements, total cleared becomes 49.",
            "F. After swap, elimination occurs, clearing 1 elements, total cleared becomes 47.",
            "G. After swap, elimination occurs, clearing 2 elements, total cleared becomes 47.",
            "H. After swap, elimination occurs, clearing 3 elements, total cleared becomes 49."
        ]
    },
    {
        "data_id": "jewel2-train-00001-6",
        "qa_type": "ActionOutcome",
        "question_id": 4,
        "question_description": "Simulate swap operation",
        "image": "images/00001.png",
        "state": "states/00001.json",
        "plot_level": "Easy",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute swap 0 0 right?\n\n**Options:**\nA. Nothing will happen because the swap does not meet elimination conditions.\nB. Cannot perform swap because one of the elements is special.\nC. After swap, elimination occurs, clearing 3 elements, total cleared becomes 45.\nD. After swap, elimination occurs, clearing 2 elements, total cleared becomes 46.\nE. After swap, elimination occurs, clearing 1 elements, total cleared becomes 46.\nF. After swap, elimination occurs, clearing 4 elements, total cleared becomes 47.\nG. After swap, elimination occurs, clearing 3 elements, total cleared becomes 49.\nH. After swap, elimination occurs, clearing 5 elements, total cleared becomes 47.",
        "answer": "A",
        "analysis": "Swapping the elements at position (0,0) with (0,1) in the 'right' direction did not create any valid elimination conditions. No elements were cleared, and the total cleared count remains unchanged.",
        "options": [
            "A. Nothing will happen because the swap does not meet elimination conditions.",
            "B. Cannot perform swap because one of the elements is special.",
            "C. After swap, elimination occurs, clearing 3 elements, total cleared becomes 45.",
            "D. After swap, elimination occurs, clearing 2 elements, total cleared becomes 46.",
            "E. After swap, elimination occurs, clearing 1 elements, total cleared becomes 46.",
            "F. After swap, elimination occurs, clearing 4 elements, total cleared becomes 47.",
            "G. After swap, elimination occurs, clearing 3 elements, total cleared becomes 49.",
            "H. After swap, elimination occurs, clearing 5 elements, total cleared becomes 47."
        ]
    },
    {
        "data_id": "jewel2-train-00001-7",
        "qa_type": "ActionOutcome",
        "question_id": 5,
        "question_description": "Simulate command sequence",
        "image": "images/00001.png",
        "state": "states/00001.json",
        "plot_level": "Easy",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many elements will be eliminated at least after performing swap 3 0 up followed by clear 2 3?",
        "answer": "0",
        "analysis": "Executing `swap 3 0 up` resulted in vertically/horizontally clearing 0 elements, and executing `clear 2 3` resulted in vertically/horizontally clearing 0 elements. Overall, a total of 0 elements were cleared."
    },
    {
        "data_id": "jewel2-train-00001-8",
        "qa_type": "ActionOutcome",
        "question_id": 5,
        "question_description": "Simulate command sequence",
        "image": "images/00001.png",
        "state": "states/00001.json",
        "plot_level": "Easy",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many elements will be eliminated at least after performing swap 0 3 up followed by swap 0 2 up?",
        "answer": "0",
        "analysis": "Executing `swap 0 3 up` resulted in vertically/horizontally clearing 0 elements, and executing `swap 0 2 up` resulted in vertically/horizontally clearing 0 elements. Overall, a total of 0 elements were cleared."
    },
    {
        "data_id": "jewel2-train-00001-9",
        "qa_type": "StrategyOptimization",
        "question_id": 6,
        "question_description": "Optimize command choice",
        "image": "images/00001.png",
        "state": "states/00001.json",
        "plot_level": "Easy",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What command will result in the maximum number of elements being cleared in a single move?",
        "answer": "clear 1 2",
        "analysis": "Analysis of all possible clearing moves:\n\n- Command `clear 1 2` will vertically/horizontally clear 3 elements\n\nBest strategy analysis:\nThe optimal move is `clear 1 2`, which will vertically/horizontally clear the maximum number of 3 elements. This is superior to the other 0 possible moves as it results in the highest number of cleared elements."
    },
    {
        "data_id": "jewel2-train-00002-0",
        "qa_type": "StateInfo",
        "question_id": 0,
        "question_description": "Count specific element",
        "image": "images/00002.png",
        "state": "states/00002.json",
        "plot_level": "Easy",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many 'B' elements are currently on the board?",
        "answer": "4",
        "analysis": "By iterating through each row and column of the chessboard, we identified and counted all occurrences of the 'B' element.The 'B' elements are located at the following positions: (1,2), (1,3), (3,1), (3,3).So there are  **4** 'B' in total.\n\n"
    },
    {
        "data_id": "jewel2-train-00002-1",
        "qa_type": "StateInfo",
        "question_id": 1,
        "question_description": "Identify element position",
        "image": "images/00002.png",
        "state": "states/00002.json",
        "plot_level": "Easy",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:**Which of the following positions does element 'C' reside in?\n\n**Options:**\nA. Position (3, 1)\nB. Position (2, 1)\nC. Position (3, 3)\nD. Position (1, 2)\nE. Position (3, 0)\nF. Position (2, 0)\nG. Position (1, 0)\nH. Position (1, 1)",
        "answer": "G",
        "analysis": "The 'C' element is located at the following positions: (1,0). Option G refers to position (1, 0), where the 'C' element resides.",
        "options": [
            "A. Position (3, 1)",
            "B. Position (2, 1)",
            "C. Position (3, 3)",
            "D. Position (1, 2)",
            "E. Position (3, 0)",
            "F. Position (2, 0)",
            "G. Position (1, 0)",
            "H. Position (1, 1)"
        ]
    },
    {
        "data_id": "jewel2-train-00002-2",
        "qa_type": "StateInfo",
        "question_id": 2,
        "question_description": "Count special elements",
        "image": "images/00002.png",
        "state": "states/00002.json",
        "plot_level": "Easy",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many special elements (a, b, c, d, e, +, |) are there on the board?",
        "answer": "1",
        "analysis": "By iterating through the chessboard, we counted all special elements (a, b, c, d, e, +, |).\n\nPositions of special elements:\n- Element 'a': None found\n- Element 'b': None found\n- Element 'c': (2,3)\n- Element 'd': None found\n- Element 'e': None found\n- Element '+': None found\n- Element '|': None foundSo there are **1** special element in total."
    },
    {
        "data_id": "jewel2-train-00002-3",
        "qa_type": "ActionOutcome",
        "question_id": 3,
        "question_description": "Simulate clear operation",
        "image": "images/00002.png",
        "state": "states/00002.json",
        "plot_level": "Easy",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute clear 2 3?\n\n**Options:**\nA. Nothing will happen because the clear does not meet elimination conditions.\nB. Trigger a special element, total cleared becomes 86.\nC. Perform elimination, eliminate 3 elements, total cleared becomes 89.\nD. Perform elimination, eliminate 4 elements, total cleared becomes 86.E. Perform elimination, eliminate 4 elements, total cleared becomes 89.\nF. Perform elimination, eliminate 5 elements, total cleared becomes 88.\nG. Perform elimination, eliminate 4 elements, total cleared becomes 88.\nH. Perform elimination, eliminate 3 elements, total cleared becomes 87.",
        "answer": "B",
        "analysis": "Clearing the special element 'c' at position (2,3) triggered its ability, resulting in the elimination of additional elements. The total cleared count increased to 86.",
        "options": [
            "A. Nothing will happen because the clear does not meet elimination conditions.",
            "B. Trigger a special element, total cleared becomes 86.",
            "C. Perform elimination, eliminate 3 elements, total cleared becomes 89.",
            "D. Perform elimination, eliminate 4 elements, total cleared becomes 86.E. Perform elimination, eliminate 4 elements, total cleared becomes 89.",
            "F. Perform elimination, eliminate 5 elements, total cleared becomes 88.",
            "G. Perform elimination, eliminate 4 elements, total cleared becomes 88.",
            "H. Perform elimination, eliminate 3 elements, total cleared becomes 87."
        ]
    },
    {
        "data_id": "jewel2-train-00002-4",
        "qa_type": "ActionOutcome",
        "question_id": 3,
        "question_description": "Simulate clear operation",
        "image": "images/00002.png",
        "state": "states/00002.json",
        "plot_level": "Easy",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute clear 2 3?\n\n**Options:**\nA. Nothing will happen because the clear does not meet elimination conditions.\nB. Trigger a special element, total cleared becomes 86.\nC. Perform elimination, eliminate 4 elements, total cleared becomes 88.\nD. Perform elimination, eliminate 4 elements, total cleared becomes 88.E. Perform elimination, eliminate 3 elements, total cleared becomes 85.\nF. Perform elimination, eliminate 2 elements, total cleared becomes 88.\nG. Perform elimination, eliminate 3 elements, total cleared becomes 89.\nH. Perform elimination, eliminate 3 elements, total cleared becomes 86.",
        "answer": "B",
        "analysis": "Clearing the special element 'c' at position (2,3) triggered its ability, resulting in the elimination of additional elements. The total cleared count increased to 86.",
        "options": [
            "A. Nothing will happen because the clear does not meet elimination conditions.",
            "B. Trigger a special element, total cleared becomes 86.",
            "C. Perform elimination, eliminate 4 elements, total cleared becomes 88.",
            "D. Perform elimination, eliminate 4 elements, total cleared becomes 88.E. Perform elimination, eliminate 3 elements, total cleared becomes 85.",
            "F. Perform elimination, eliminate 2 elements, total cleared becomes 88.",
            "G. Perform elimination, eliminate 3 elements, total cleared becomes 89.",
            "H. Perform elimination, eliminate 3 elements, total cleared becomes 86."
        ]
    },
    {
        "data_id": "jewel2-train-00002-5",
        "qa_type": "ActionOutcome",
        "question_id": 4,
        "question_description": "Simulate swap operation",
        "image": "images/00002.png",
        "state": "states/00002.json",
        "plot_level": "Easy",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute swap 0 1 down?\n\n**Options:**\nA. Nothing will happen because the swap does not meet elimination conditions.\nB. Cannot perform swap because one of the elements is special.\nC. After swap, elimination occurs, clearing 5 elements, total cleared becomes 89.\nD. After swap, elimination occurs, clearing 3 elements, total cleared becomes 87.\nE. After swap, elimination occurs, clearing 4 elements, total cleared becomes 88.\nF. After swap, elimination occurs, clearing 4 elements, total cleared becomes 88.\nG. After swap, elimination occurs, clearing 4 elements, total cleared becomes 88.\nH. After swap, elimination occurs, clearing 9 elements, total cleared becomes 93.",
        "answer": "D",
        "analysis": "Successfully swapped the elements at position (0,1) with (1,1) in the 'down' direction, resulting in the vertical/horizontal elimination of 3 elements because it meets the elimination rule. The total cleared count increased to 87.",
        "options": [
            "A. Nothing will happen because the swap does not meet elimination conditions.",
            "B. Cannot perform swap because one of the elements is special.",
            "C. After swap, elimination occurs, clearing 5 elements, total cleared becomes 89.",
            "D. After swap, elimination occurs, clearing 3 elements, total cleared becomes 87.",
            "E. After swap, elimination occurs, clearing 4 elements, total cleared becomes 88.",
            "F. After swap, elimination occurs, clearing 4 elements, total cleared becomes 88.",
            "G. After swap, elimination occurs, clearing 4 elements, total cleared becomes 88.",
            "H. After swap, elimination occurs, clearing 9 elements, total cleared becomes 93."
        ]
    },
    {
        "data_id": "jewel2-train-00002-6",
        "qa_type": "ActionOutcome",
        "question_id": 4,
        "question_description": "Simulate swap operation",
        "image": "images/00002.png",
        "state": "states/00002.json",
        "plot_level": "Easy",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute swap 0 1 down?\n\n**Options:**\nA. Nothing will happen because the swap does not meet elimination conditions.\nB. Cannot perform swap because one of the elements is special.\nC. After swap, elimination occurs, clearing 6 elements, total cleared becomes 90.\nD. After swap, elimination occurs, clearing 7 elements, total cleared becomes 91.\nE. After swap, elimination occurs, clearing 7 elements, total cleared becomes 91.\nF. After swap, elimination occurs, clearing 6 elements, total cleared becomes 90.\nG. After swap, elimination occurs, clearing 3 elements, total cleared becomes 87.\nH. After swap, elimination occurs, clearing 1 elements, total cleared becomes 85.",
        "answer": "G",
        "analysis": "Successfully swapped the elements at position (0,1) with (1,1) in the 'down' direction, resulting in the vertical/horizontal elimination of 3 elements because it meets the elimination rule. The total cleared count increased to 87.",
        "options": [
            "A. Nothing will happen because the swap does not meet elimination conditions.",
            "B. Cannot perform swap because one of the elements is special.",
            "C. After swap, elimination occurs, clearing 6 elements, total cleared becomes 90.",
            "D. After swap, elimination occurs, clearing 7 elements, total cleared becomes 91.",
            "E. After swap, elimination occurs, clearing 7 elements, total cleared becomes 91.",
            "F. After swap, elimination occurs, clearing 6 elements, total cleared becomes 90.",
            "G. After swap, elimination occurs, clearing 3 elements, total cleared becomes 87.",
            "H. After swap, elimination occurs, clearing 1 elements, total cleared becomes 85."
        ]
    },
    {
        "data_id": "jewel2-train-00002-7",
        "qa_type": "ActionOutcome",
        "question_id": 5,
        "question_description": "Simulate command sequence",
        "image": "images/00002.png",
        "state": "states/00002.json",
        "plot_level": "Easy",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many elements will be eliminated at least after performing swap 3 2 right followed by swap 0 1 left?",
        "answer": "0",
        "analysis": "Executing `swap 3 2 right` resulted in vertically/horizontally clearing 0 elements, and executing `swap 0 1 left` resulted in vertically/horizontally clearing 0 elements. Overall, a total of 0 elements were cleared."
    },
    {
        "data_id": "jewel2-train-00002-8",
        "qa_type": "ActionOutcome",
        "question_id": 5,
        "question_description": "Simulate command sequence",
        "image": "images/00002.png",
        "state": "states/00002.json",
        "plot_level": "Easy",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many elements will be eliminated at least after performing swap 3 3 down followed by swap 3 2 down?",
        "answer": "0",
        "analysis": "Executing `swap 3 3 down` resulted in vertically/horizontally clearing 0 elements, and executing `swap 3 2 down` resulted in vertically/horizontally clearing 0 elements. Overall, a total of 0 elements were cleared."
    },
    {
        "data_id": "jewel2-train-00002-9",
        "qa_type": "StrategyOptimization",
        "question_id": 6,
        "question_description": "Optimize command choice",
        "image": "images/00002.png",
        "state": "states/00002.json",
        "plot_level": "Easy",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What command will result in the maximum number of elements being cleared in a single move?",
        "answer": "swap 0 1 down",
        "analysis": "Analysis of all possible clearing moves:\n\n- Command `swap 0 1 down` will vertically/horizontally clear 3 elements\n- Command `swap 1 0 right` will vertically/horizontally clear 3 elements\n- Command `swap 1 1 up` will vertically/horizontally clear 3 elements\n- Command `swap 1 1 left` will vertically/horizontally clear 3 elements\n- Command `clear 2 3` will vertically/horizontally clear 2 elements\n\nBest strategy analysis:\nThe optimal move is `swap 0 1 down`, which will vertically/horizontally clear the maximum number of 3 elements. This is superior to the other 4 possible moves as it results in the highest number of cleared elements."
    },
    {
        "data_id": "jewel2-train-00003-0",
        "qa_type": "StateInfo",
        "question_id": 0,
        "question_description": "Count specific element",
        "image": "images/00003.png",
        "state": "states/00003.json",
        "plot_level": "Medium",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many 'E' elements are currently on the board?",
        "answer": "6",
        "analysis": "By iterating through each row and column of the chessboard, we identified and counted all occurrences of the 'E' element.The 'E' elements are located at the following positions: (0,0), (1,1), (2,0), (3,2), (3,4), (4,0).So there are  **6** 'E' in total.\n\n"
    },
    {
        "data_id": "jewel2-train-00003-1",
        "qa_type": "StateInfo",
        "question_id": 1,
        "question_description": "Identify element position",
        "image": "images/00003.png",
        "state": "states/00003.json",
        "plot_level": "Medium",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:**Which of the following positions does element 'B' reside in?\n\n**Options:**\nA. Position (3, 3)\nB. Position (1, 3)\nC. Position (4, 1)\nD. Position (2, 1)\nE. Position (4, 3)\nF. Position (3, 1)\nG. Position (3, 0)\nH. Position (1, 1)",
        "answer": "F",
        "analysis": "The 'B' element is located at the following positions: (2,3), (3,1). Option F refers to position (3, 1), where the 'B' element resides.",
        "options": [
            "A. Position (3, 3)",
            "B. Position (1, 3)",
            "C. Position (4, 1)",
            "D. Position (2, 1)",
            "E. Position (4, 3)",
            "F. Position (3, 1)",
            "G. Position (3, 0)",
            "H. Position (1, 1)"
        ]
    },
    {
        "data_id": "jewel2-train-00003-2",
        "qa_type": "StateInfo",
        "question_id": 2,
        "question_description": "Count special elements",
        "image": "images/00003.png",
        "state": "states/00003.json",
        "plot_level": "Medium",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many special elements (a, b, c, d, e, +, |) are there on the board?",
        "answer": "2",
        "analysis": "By iterating through the chessboard, we counted all special elements (a, b, c, d, e, +, |).\n\nPositions of special elements:\n- Element 'a': None found\n- Element 'b': None found\n- Element 'c': (4,3)\n- Element 'd': None found\n- Element 'e': (4,4)\n- Element '+': None found\n- Element '|': None foundSo there are **2** special element in total."
    },
    {
        "data_id": "jewel2-train-00003-3",
        "qa_type": "ActionOutcome",
        "question_id": 3,
        "question_description": "Simulate clear operation",
        "image": "images/00003.png",
        "state": "states/00003.json",
        "plot_level": "Medium",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute clear 4 4?\n\n**Options:**\nA. Nothing will happen because the clear does not meet elimination conditions.\nB. Trigger a special element, total cleared becomes 91.\nC. Perform elimination, eliminate 4 elements, total cleared becomes 87.\nD. Perform elimination, eliminate 4 elements, total cleared becomes 88.E. Perform elimination, eliminate 1 elements, total cleared becomes 86.\nF. Perform elimination, eliminate 3 elements, total cleared becomes 88.\nG. Perform elimination, eliminate 5 elements, total cleared becomes 85.\nH. Perform elimination, eliminate 2 elements, total cleared becomes 87.",
        "answer": "B",
        "analysis": "Clearing the special element 'e' at position (4,4) triggered its ability, resulting in the elimination of additional elements. The total cleared count increased to 91.",
        "options": [
            "A. Nothing will happen because the clear does not meet elimination conditions.",
            "B. Trigger a special element, total cleared becomes 91.",
            "C. Perform elimination, eliminate 4 elements, total cleared becomes 87.",
            "D. Perform elimination, eliminate 4 elements, total cleared becomes 88.E. Perform elimination, eliminate 1 elements, total cleared becomes 86.",
            "F. Perform elimination, eliminate 3 elements, total cleared becomes 88.",
            "G. Perform elimination, eliminate 5 elements, total cleared becomes 85.",
            "H. Perform elimination, eliminate 2 elements, total cleared becomes 87."
        ]
    },
    {
        "data_id": "jewel2-train-00003-4",
        "qa_type": "ActionOutcome",
        "question_id": 3,
        "question_description": "Simulate clear operation",
        "image": "images/00003.png",
        "state": "states/00003.json",
        "plot_level": "Medium",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute clear 3 0?\n\n**Options:**\nA. Nothing will happen because the clear does not meet elimination conditions.\nB. Trigger a special element, total cleared becomes 86.\nC. Perform elimination, eliminate 5 elements, total cleared becomes 88.\nD. Perform elimination, eliminate 1 elements, total cleared becomes 86.E. Perform elimination, eliminate 3 elements, total cleared becomes 85.\nF. Perform elimination, eliminate 5 elements, total cleared becomes 86.\nG. Perform elimination, eliminate 1 elements, total cleared becomes 85.\nH. Perform elimination, eliminate 1 elements, total cleared becomes 89.",
        "answer": "A",
        "analysis": "Attempting to clear the element at position (3,0) did not meet the elimination conditions, so no elements were cleared.",
        "options": [
            "A. Nothing will happen because the clear does not meet elimination conditions.",
            "B. Trigger a special element, total cleared becomes 86.",
            "C. Perform elimination, eliminate 5 elements, total cleared becomes 88.",
            "D. Perform elimination, eliminate 1 elements, total cleared becomes 86.E. Perform elimination, eliminate 3 elements, total cleared becomes 85.",
            "F. Perform elimination, eliminate 5 elements, total cleared becomes 86.",
            "G. Perform elimination, eliminate 1 elements, total cleared becomes 85.",
            "H. Perform elimination, eliminate 1 elements, total cleared becomes 89."
        ]
    },
    {
        "data_id": "jewel2-train-00003-5",
        "qa_type": "ActionOutcome",
        "question_id": 4,
        "question_description": "Simulate swap operation",
        "image": "images/00003.png",
        "state": "states/00003.json",
        "plot_level": "Medium",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute swap 0 2 down?\n\n**Options:**\nA. Nothing will happen because the swap does not meet elimination conditions.\nB. Cannot perform swap because one of the elements is special.\nC. After swap, elimination occurs, clearing 8 elements, total cleared becomes 92.\nD. After swap, elimination occurs, clearing 2 elements, total cleared becomes 86.\nE. After swap, elimination occurs, clearing 6 elements, total cleared becomes 90.\nF. After swap, elimination occurs, clearing 4 elements, total cleared becomes 88.\nG. After swap, elimination occurs, clearing 2 elements, total cleared becomes 86.\nH. After swap, elimination occurs, clearing 4 elements, total cleared becomes 88.",
        "answer": "E",
        "analysis": "Successfully swapped the elements at position (0,2) with (1,2) in the 'down' direction, resulting in the vertical/horizontal elimination of 6 elements because it meets the elimination rule. The total cleared count increased to 90.",
        "options": [
            "A. Nothing will happen because the swap does not meet elimination conditions.",
            "B. Cannot perform swap because one of the elements is special.",
            "C. After swap, elimination occurs, clearing 8 elements, total cleared becomes 92.",
            "D. After swap, elimination occurs, clearing 2 elements, total cleared becomes 86.",
            "E. After swap, elimination occurs, clearing 6 elements, total cleared becomes 90.",
            "F. After swap, elimination occurs, clearing 4 elements, total cleared becomes 88.",
            "G. After swap, elimination occurs, clearing 2 elements, total cleared becomes 86.",
            "H. After swap, elimination occurs, clearing 4 elements, total cleared becomes 88."
        ]
    },
    {
        "data_id": "jewel2-train-00003-6",
        "qa_type": "ActionOutcome",
        "question_id": 4,
        "question_description": "Simulate swap operation",
        "image": "images/00003.png",
        "state": "states/00003.json",
        "plot_level": "Medium",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute swap 0 1 down?\n\n**Options:**\nA. Nothing will happen because the swap does not meet elimination conditions.\nB. Cannot perform swap because one of the elements is special.\nC. After swap, elimination occurs, clearing 3 elements, total cleared becomes 87.\nD. After swap, elimination occurs, clearing 8 elements, total cleared becomes 92.\nE. After swap, elimination occurs, clearing 6 elements, total cleared becomes 90.\nF. After swap, elimination occurs, clearing 4 elements, total cleared becomes 88.\nG. After swap, elimination occurs, clearing 9 elements, total cleared becomes 93.\nH. After swap, elimination occurs, clearing 8 elements, total cleared becomes 92.",
        "answer": "F",
        "analysis": "Successfully swapped the elements at position (0,1) with (1,1) in the 'down' direction, resulting in the vertical/horizontal elimination of 4 elements because it meets the elimination rule. The total cleared count increased to 88.",
        "options": [
            "A. Nothing will happen because the swap does not meet elimination conditions.",
            "B. Cannot perform swap because one of the elements is special.",
            "C. After swap, elimination occurs, clearing 3 elements, total cleared becomes 87.",
            "D. After swap, elimination occurs, clearing 8 elements, total cleared becomes 92.",
            "E. After swap, elimination occurs, clearing 6 elements, total cleared becomes 90.",
            "F. After swap, elimination occurs, clearing 4 elements, total cleared becomes 88.",
            "G. After swap, elimination occurs, clearing 9 elements, total cleared becomes 93.",
            "H. After swap, elimination occurs, clearing 8 elements, total cleared becomes 92."
        ]
    },
    {
        "data_id": "jewel2-train-00003-7",
        "qa_type": "ActionOutcome",
        "question_id": 5,
        "question_description": "Simulate command sequence",
        "image": "images/00003.png",
        "state": "states/00003.json",
        "plot_level": "Medium",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many elements will be eliminated at least after performing clear 0 3 followed by swap 4 0 down?",
        "answer": "3",
        "analysis": "Executing `clear 0 3` resulted in vertically/horizontally clearing 3 elements, and executing `swap 4 0 down` resulted in vertically/horizontally clearing 0 elements. Overall, a total of 3 elements were cleared."
    },
    {
        "data_id": "jewel2-train-00003-8",
        "qa_type": "ActionOutcome",
        "question_id": 5,
        "question_description": "Simulate command sequence",
        "image": "images/00003.png",
        "state": "states/00003.json",
        "plot_level": "Medium",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many elements will be eliminated at least after performing swap 3 2 right followed by swap 3 2 up?",
        "answer": "0",
        "analysis": "Executing `swap 3 2 right` resulted in vertically/horizontally clearing 0 elements, and executing `swap 3 2 up` resulted in vertically/horizontally clearing 0 elements. Overall, a total of 0 elements were cleared."
    },
    {
        "data_id": "jewel2-train-00003-9",
        "qa_type": "StrategyOptimization",
        "question_id": 6,
        "question_description": "Optimize command choice",
        "image": "images/00003.png",
        "state": "states/00003.json",
        "plot_level": "Medium",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What command will result in the maximum number of elements being cleared in a single move?",
        "answer": "clear 4 3",
        "analysis": "Analysis of all possible clearing moves:\n\n- Command `clear 4 3` will vertically/horizontally clear 9 elements\n- Command `clear 4 4` will vertically/horizontally clear 7 elements\n- Command `swap 0 2 down` will vertically/horizontally clear 6 elements\n- Command `swap 0 3 down` will vertically/horizontally clear 6 elements\n- Command `swap 1 2 up` will vertically/horizontally clear 6 elements\n- Command `swap 1 3 up` will vertically/horizontally clear 6 elements\n- Command `swap 0 1 down` will vertically/horizontally clear 4 elements\n- Command `swap 0 4 down` will vertically/horizontally clear 4 elements\n- Command `swap 1 1 up` will vertically/horizontally clear 4 elements\n- Command `swap 1 4 up` will vertically/horizontally clear 4 elements\n- Command `swap 0 1 right` will vertically/horizontally clear 3 elements\n- Command `swap 0 2 right` will vertically/horizontally clear 3 elements\n- Command `swap 0 2 left` will vertically/horizontally clear 3 elements\n- Command `swap 0 3 right` will vertically/horizontally clear 3 elements\n- Command `swap 0 3 left` will vertically/horizontally clear 3 elements\n- Command `swap 0 4 left` will vertically/horizontally clear 3 elements\n- Command `swap 1 0 right` will vertically/horizontally clear 3 elements\n- Command `swap 1 1 left` will vertically/horizontally clear 3 elements\n- Command `swap 1 2 right` will vertically/horizontally clear 3 elements\n- Command `swap 1 3 right` will vertically/horizontally clear 3 elements\n- Command `swap 1 3 left` will vertically/horizontally clear 3 elements\n- Command `swap 1 4 down` will vertically/horizontally clear 3 elements\n- Command `swap 1 4 left` will vertically/horizontally clear 3 elements\n- Command `swap 2 3 right` will vertically/horizontally clear 3 elements\n- Command `swap 2 4 up` will vertically/horizontally clear 3 elements\n- Command `swap 2 4 left` will vertically/horizontally clear 3 elements\n- Command `clear 0 1` will vertically/horizontally clear 3 elements\n- Command `clear 0 2` will vertically/horizontally clear 3 elements\n- Command `clear 0 3` will vertically/horizontally clear 3 elements\n- Command `clear 1 2` will vertically/horizontally clear 3 elements\n- Command `clear 1 3` will vertically/horizontally clear 3 elements\n- Command `clear 1 4` will vertically/horizontally clear 3 elements\n\nBest strategy analysis:\nThe optimal move is `clear 4 3`, which will vertically/horizontally clear the maximum number of 9 elements. This is superior to the other 31 possible moves as it results in the highest number of cleared elements."
    },
    {
        "data_id": "jewel2-train-00004-0",
        "qa_type": "StateInfo",
        "question_id": 0,
        "question_description": "Count specific element",
        "image": "images/00004.png",
        "state": "states/00004.json",
        "plot_level": "Medium",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many 'B' elements are currently on the board?",
        "answer": "6",
        "analysis": "By iterating through each row and column of the chessboard, we identified and counted all occurrences of the 'B' element.The 'B' elements are located at the following positions: (0,0), (1,4), (2,1), (2,4), (4,1), (4,4).So there are  **6** 'B' in total.\n\n"
    },
    {
        "data_id": "jewel2-train-00004-1",
        "qa_type": "StateInfo",
        "question_id": 1,
        "question_description": "Identify element position",
        "image": "images/00004.png",
        "state": "states/00004.json",
        "plot_level": "Medium",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:**Which of the following positions does element 'A' reside in?\n\n**Options:**\nA. Position (1, 0)\nB. Position (4, 2)\nC. Position (3, 1)\nD. Position (0, 3)\nE. Position (2, 0)\nF. Position (4, 1)\nG. Position (4, 4)\nH. Position (4, 0)",
        "answer": "A",
        "analysis": "The 'A' element is located at the following positions: (1,0), (1,1), (4,3). Option A refers to position (1, 0), where the 'A' element resides.",
        "options": [
            "A. Position (1, 0)",
            "B. Position (4, 2)",
            "C. Position (3, 1)",
            "D. Position (0, 3)",
            "E. Position (2, 0)",
            "F. Position (4, 1)",
            "G. Position (4, 4)",
            "H. Position (4, 0)"
        ]
    },
    {
        "data_id": "jewel2-train-00004-2",
        "qa_type": "StateInfo",
        "question_id": 2,
        "question_description": "Count special elements",
        "image": "images/00004.png",
        "state": "states/00004.json",
        "plot_level": "Medium",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many special elements (a, b, c, d, e, +, |) are there on the board?",
        "answer": "2",
        "analysis": "By iterating through the chessboard, we counted all special elements (a, b, c, d, e, +, |).\n\nPositions of special elements:\n- Element 'a': None found\n- Element 'b': None found\n- Element 'c': (3,4)\n- Element 'd': None found\n- Element 'e': (3,2)\n- Element '+': None found\n- Element '|': None foundSo there are **2** special element in total."
    },
    {
        "data_id": "jewel2-train-00004-3",
        "qa_type": "ActionOutcome",
        "question_id": 3,
        "question_description": "Simulate clear operation",
        "image": "images/00004.png",
        "state": "states/00004.json",
        "plot_level": "Medium",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute clear 0 3?\n\n**Options:**\nA. Nothing will happen because the clear does not meet elimination conditions.\nB. Trigger a special element, total cleared becomes 98.\nC. Perform elimination, eliminate 9 elements, total cleared becomes 104.\nD. Perform elimination, eliminate 9 elements, total cleared becomes 104.\nE. Perform elimination, eliminate 2 elements, total cleared becomes 97.\nF. Perform elimination, eliminate 3 elements, total cleared becomes 98.\nG. Perform elimination, eliminate 9 elements, total cleared becomes 104.\nH. Perform elimination, eliminate 9 elements, total cleared becomes 104.",
        "answer": "F",
        "analysis": "There are 3 'D' elements in a row/column.When executing clear 0 3 they will be eliminated.Clearing the element 'D' at position (0,3) successfully eliminated 3 elements vertically/horizontally, increasing the total cleared count to 98.",
        "options": [
            "A. Nothing will happen because the clear does not meet elimination conditions.",
            "B. Trigger a special element, total cleared becomes 98.",
            "C. Perform elimination, eliminate 9 elements, total cleared becomes 104.",
            "D. Perform elimination, eliminate 9 elements, total cleared becomes 104.",
            "E. Perform elimination, eliminate 2 elements, total cleared becomes 97.",
            "F. Perform elimination, eliminate 3 elements, total cleared becomes 98.",
            "G. Perform elimination, eliminate 9 elements, total cleared becomes 104.",
            "H. Perform elimination, eliminate 9 elements, total cleared becomes 104."
        ]
    },
    {
        "data_id": "jewel2-train-00004-4",
        "qa_type": "ActionOutcome",
        "question_id": 3,
        "question_description": "Simulate clear operation",
        "image": "images/00004.png",
        "state": "states/00004.json",
        "plot_level": "Medium",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute clear 1 3?\n\n**Options:**\nA. Nothing will happen because the clear does not meet elimination conditions.\nB. Trigger a special element, total cleared becomes 98.\nC. Perform elimination, eliminate 4 elements, total cleared becomes 99.\nD. Perform elimination, eliminate 4 elements, total cleared becomes 99.\nE. Perform elimination, eliminate 4 elements, total cleared becomes 99.\nF. Perform elimination, eliminate 2 elements, total cleared becomes 97.\nG. Perform elimination, eliminate 7 elements, total cleared becomes 102.\nH. Perform elimination, eliminate 3 elements, total cleared becomes 98.",
        "answer": "H",
        "analysis": "There are 3 'D' elements in a row/column.When executing clear 1 3 they will be eliminated.Clearing the element 'D' at position (1,3) successfully eliminated 3 elements vertically/horizontally, increasing the total cleared count to 98.",
        "options": [
            "A. Nothing will happen because the clear does not meet elimination conditions.",
            "B. Trigger a special element, total cleared becomes 98.",
            "C. Perform elimination, eliminate 4 elements, total cleared becomes 99.",
            "D. Perform elimination, eliminate 4 elements, total cleared becomes 99.",
            "E. Perform elimination, eliminate 4 elements, total cleared becomes 99.",
            "F. Perform elimination, eliminate 2 elements, total cleared becomes 97.",
            "G. Perform elimination, eliminate 7 elements, total cleared becomes 102.",
            "H. Perform elimination, eliminate 3 elements, total cleared becomes 98."
        ]
    },
    {
        "data_id": "jewel2-train-00004-5",
        "qa_type": "ActionOutcome",
        "question_id": 4,
        "question_description": "Simulate swap operation",
        "image": "images/00004.png",
        "state": "states/00004.json",
        "plot_level": "Medium",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute swap 0 3 down?\n\n**Options:**\nA. Nothing will happen because the swap does not meet elimination conditions.\nB. Cannot perform swap because one of the elements is special.\nC. After swap, elimination occurs, clearing 5 elements, total cleared becomes 100.\nD. After swap, elimination occurs, clearing 3 elements, total cleared becomes 98.\nE. After swap, elimination occurs, clearing 8 elements, total cleared becomes 103.\nF. After swap, elimination occurs, clearing 8 elements, total cleared becomes 103.\nG. After swap, elimination occurs, clearing 2 elements, total cleared becomes 97.\nH. After swap, elimination occurs, clearing 1 elements, total cleared becomes 96.",
        "answer": "D",
        "analysis": "Successfully swapped the elements at position (0,3) with (1,3) in the 'down' direction, resulting in the vertical/horizontal elimination of 3 elements because it meets the elimination rule. The total cleared count increased to 98.",
        "options": [
            "A. Nothing will happen because the swap does not meet elimination conditions.",
            "B. Cannot perform swap because one of the elements is special.",
            "C. After swap, elimination occurs, clearing 5 elements, total cleared becomes 100.",
            "D. After swap, elimination occurs, clearing 3 elements, total cleared becomes 98.",
            "E. After swap, elimination occurs, clearing 8 elements, total cleared becomes 103.",
            "F. After swap, elimination occurs, clearing 8 elements, total cleared becomes 103.",
            "G. After swap, elimination occurs, clearing 2 elements, total cleared becomes 97.",
            "H. After swap, elimination occurs, clearing 1 elements, total cleared becomes 96."
        ]
    },
    {
        "data_id": "jewel2-train-00004-6",
        "qa_type": "ActionOutcome",
        "question_id": 4,
        "question_description": "Simulate swap operation",
        "image": "images/00004.png",
        "state": "states/00004.json",
        "plot_level": "Medium",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute swap 0 1 right?\n\n**Options:**\nA. Nothing will happen because the swap does not meet elimination conditions.\nB. Cannot perform swap because one of the elements is special.\nC. After swap, elimination occurs, clearing 5 elements, total cleared becomes 99.\nD. After swap, elimination occurs, clearing 2 elements, total cleared becomes 97.\nE. After swap, elimination occurs, clearing 5 elements, total cleared becomes 100.\nF. After swap, elimination occurs, clearing 5 elements, total cleared becomes 96.\nG. After swap, elimination occurs, clearing 3 elements, total cleared becomes 96.\nH. After swap, elimination occurs, clearing 2 elements, total cleared becomes 97.",
        "answer": "A",
        "analysis": "Swapping the elements at position (0,1) with (0,2) in the 'right' direction did not create any valid elimination conditions. No elements were cleared, and the total cleared count remains unchanged.",
        "options": [
            "A. Nothing will happen because the swap does not meet elimination conditions.",
            "B. Cannot perform swap because one of the elements is special.",
            "C. After swap, elimination occurs, clearing 5 elements, total cleared becomes 99.",
            "D. After swap, elimination occurs, clearing 2 elements, total cleared becomes 97.",
            "E. After swap, elimination occurs, clearing 5 elements, total cleared becomes 100.",
            "F. After swap, elimination occurs, clearing 5 elements, total cleared becomes 96.",
            "G. After swap, elimination occurs, clearing 3 elements, total cleared becomes 96.",
            "H. After swap, elimination occurs, clearing 2 elements, total cleared becomes 97."
        ]
    },
    {
        "data_id": "jewel2-train-00004-7",
        "qa_type": "ActionOutcome",
        "question_id": 5,
        "question_description": "Simulate command sequence",
        "image": "images/00004.png",
        "state": "states/00004.json",
        "plot_level": "Medium",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many elements will be eliminated at least after performing swap 1 1 up followed by swap 3 3 right?",
        "answer": "0",
        "analysis": "Executing `swap 1 1 up` resulted in vertically/horizontally clearing 0 elements, and executing `swap 3 3 right` resulted in vertically/horizontally clearing 0 elements. Overall, a total of 0 elements were cleared."
    },
    {
        "data_id": "jewel2-train-00004-8",
        "qa_type": "ActionOutcome",
        "question_id": 5,
        "question_description": "Simulate command sequence",
        "image": "images/00004.png",
        "state": "states/00004.json",
        "plot_level": "Medium",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many elements will be eliminated at least after performing swap 4 2 up followed by swap 0 3 down?",
        "answer": "3",
        "analysis": "Executing `swap 4 2 up` resulted in vertically/horizontally clearing 0 elements, and executing `swap 0 3 down` resulted in vertically/horizontally clearing 3 elements. Overall, a total of 3 elements were cleared."
    },
    {
        "data_id": "jewel2-train-00004-9",
        "qa_type": "StrategyOptimization",
        "question_id": 6,
        "question_description": "Optimize command choice",
        "image": "images/00004.png",
        "state": "states/00004.json",
        "plot_level": "Medium",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What command will result in the maximum number of elements being cleared in a single move?",
        "answer": "clear 3 4",
        "analysis": "Analysis of all possible clearing moves:\n\n- Command `clear 3 4` will vertically/horizontally clear 5 elements\n- Command `clear 3 2` will vertically/horizontally clear 4 elements\n- Command `swap 0 3 down` will vertically/horizontally clear 3 elements\n- Command `swap 0 3 right` will vertically/horizontally clear 3 elements\n- Command `swap 0 4 left` will vertically/horizontally clear 3 elements\n- Command `swap 1 3 up` will vertically/horizontally clear 3 elements\n- Command `swap 1 3 down` will vertically/horizontally clear 3 elements\n- Command `swap 2 2 right` will vertically/horizontally clear 3 elements\n- Command `swap 2 3 up` will vertically/horizontally clear 3 elements\n- Command `swap 2 3 left` will vertically/horizontally clear 3 elements\n- Command `clear 0 3` will vertically/horizontally clear 3 elements\n- Command `clear 1 3` will vertically/horizontally clear 3 elements\n- Command `clear 2 3` will vertically/horizontally clear 3 elements\n\nBest strategy analysis:\nThe optimal move is `clear 3 4`, which will vertically/horizontally clear the maximum number of 5 elements. This is superior to the other 12 possible moves as it results in the highest number of cleared elements."
    },
    {
        "data_id": "jewel2-train-00005-0",
        "qa_type": "StateInfo",
        "question_id": 0,
        "question_description": "Count specific element",
        "image": "images/00005.png",
        "state": "states/00005.json",
        "plot_level": "Hard",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many 'D' elements are currently on the board?",
        "answer": "6",
        "analysis": "By iterating through each row and column of the chessboard, we identified and counted all occurrences of the 'D' element.The 'D' elements are located at the following positions: (2,0), (2,2), (3,1), (3,2), (3,4), (4,0).So there are  **6** 'D' in total.\n\n"
    },
    {
        "data_id": "jewel2-train-00005-1",
        "qa_type": "StateInfo",
        "question_id": 1,
        "question_description": "Identify element position",
        "image": "images/00005.png",
        "state": "states/00005.json",
        "plot_level": "Hard",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:**Which of the following positions does element 'E' reside in?\n\n**Options:**\nA. Position (5, 1)\nB. Position (5, 0)\nC. Position (5, 2)\nD. Position (2, 1)\nE. Position (3, 5)\nF. Position (2, 0)\nG. Position (4, 0)\nH. Position (3, 3)",
        "answer": "E",
        "analysis": "The 'E' element is located at the following positions: (0,2), (0,3), (1,5), (2,3), (3,0), (3,5), (5,3). Option E refers to position (3, 5), where the 'E' element resides.",
        "options": [
            "A. Position (5, 1)",
            "B. Position (5, 0)",
            "C. Position (5, 2)",
            "D. Position (2, 1)",
            "E. Position (3, 5)",
            "F. Position (2, 0)",
            "G. Position (4, 0)",
            "H. Position (3, 3)"
        ]
    },
    {
        "data_id": "jewel2-train-00005-2",
        "qa_type": "StateInfo",
        "question_id": 2,
        "question_description": "Count special elements",
        "image": "images/00005.png",
        "state": "states/00005.json",
        "plot_level": "Hard",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many special elements (a, b, c, d, e, +, |) are there on the board?",
        "answer": "1",
        "analysis": "By iterating through the chessboard, we counted all special elements (a, b, c, d, e, +, |).\n\nPositions of special elements:\n- Element 'a': (4,2)\n- Element 'b': None found\n- Element 'c': None found\n- Element 'd': None found\n- Element 'e': None found\n- Element '+': None found\n- Element '|': None foundSo there are **1** special element in total."
    },
    {
        "data_id": "jewel2-train-00005-3",
        "qa_type": "ActionOutcome",
        "question_id": 3,
        "question_description": "Simulate clear operation",
        "image": "images/00005.png",
        "state": "states/00005.json",
        "plot_level": "Hard",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute clear 4 0?\n\n**Options:**\nA. Nothing will happen because the clear does not meet elimination conditions.\nB. Trigger a special element, total cleared becomes 5.\nC. Perform elimination, eliminate 5 elements, total cleared becomes 5.\nD. Perform elimination, eliminate 2 elements, total cleared becomes 4.E. Perform elimination, eliminate 4 elements, total cleared becomes 2.\nF. Perform elimination, eliminate 4 elements, total cleared becomes 6.\nG. Perform elimination, eliminate 4 elements, total cleared becomes 6.\nH. Perform elimination, eliminate 4 elements, total cleared becomes 3.",
        "answer": "A",
        "analysis": "Attempting to clear the element at position (4,0) did not meet the elimination conditions, so no elements were cleared.",
        "options": [
            "A. Nothing will happen because the clear does not meet elimination conditions.",
            "B. Trigger a special element, total cleared becomes 5.",
            "C. Perform elimination, eliminate 5 elements, total cleared becomes 5.",
            "D. Perform elimination, eliminate 2 elements, total cleared becomes 4.E. Perform elimination, eliminate 4 elements, total cleared becomes 2.",
            "F. Perform elimination, eliminate 4 elements, total cleared becomes 6.",
            "G. Perform elimination, eliminate 4 elements, total cleared becomes 6.",
            "H. Perform elimination, eliminate 4 elements, total cleared becomes 3."
        ]
    },
    {
        "data_id": "jewel2-train-00005-4",
        "qa_type": "ActionOutcome",
        "question_id": 3,
        "question_description": "Simulate clear operation",
        "image": "images/00005.png",
        "state": "states/00005.json",
        "plot_level": "Hard",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute clear 1 2?\n\n**Options:**\nA. Nothing will happen because the clear does not meet elimination conditions.\nB. Trigger a special element, total cleared becomes 4.\nC. Perform elimination, eliminate 1 elements, total cleared becomes 2.\nD. Perform elimination, eliminate 3 elements, total cleared becomes 4.\nE. Perform elimination, eliminate 6 elements, total cleared becomes 7.\nF. Perform elimination, eliminate 9 elements, total cleared becomes 10.\nG. Perform elimination, eliminate 9 elements, total cleared becomes 10.\nH. Perform elimination, eliminate 4 elements, total cleared becomes 5.",
        "answer": "D",
        "analysis": "There are 3 'A' elements in a row/column.When executing clear 1 2 they will be eliminated.Clearing the element 'A' at position (1,2) successfully eliminated 3 elements vertically/horizontally, increasing the total cleared count to 4.",
        "options": [
            "A. Nothing will happen because the clear does not meet elimination conditions.",
            "B. Trigger a special element, total cleared becomes 4.",
            "C. Perform elimination, eliminate 1 elements, total cleared becomes 2.",
            "D. Perform elimination, eliminate 3 elements, total cleared becomes 4.",
            "E. Perform elimination, eliminate 6 elements, total cleared becomes 7.",
            "F. Perform elimination, eliminate 9 elements, total cleared becomes 10.",
            "G. Perform elimination, eliminate 9 elements, total cleared becomes 10.",
            "H. Perform elimination, eliminate 4 elements, total cleared becomes 5."
        ]
    },
    {
        "data_id": "jewel2-train-00005-5",
        "qa_type": "ActionOutcome",
        "question_id": 4,
        "question_description": "Simulate swap operation",
        "image": "images/00005.png",
        "state": "states/00005.json",
        "plot_level": "Hard",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute swap 1 0 right?\n\n**Options:**\nA. Nothing will happen because the swap does not meet elimination conditions.\nB. Cannot perform swap because one of the elements is special.\nC. After swap, elimination occurs, clearing 3 elements, total cleared becomes 4.\nD. After swap, elimination occurs, clearing 5 elements, total cleared becomes 6.\nE. After swap, elimination occurs, clearing 3 elements, total cleared becomes 4.\nF. After swap, elimination occurs, clearing 4 elements, total cleared becomes 5.\nG. After swap, elimination occurs, clearing 2 elements, total cleared becomes 3.\nH. After swap, elimination occurs, clearing 1 elements, total cleared becomes 2.",
        "answer": "F",
        "analysis": "Successfully swapped the elements at position (1,0) with (1,1) in the 'right' direction, resulting in the vertical/horizontal elimination of 4 elements because it meets the elimination rule. The total cleared count increased to 5.",
        "options": [
            "A. Nothing will happen because the swap does not meet elimination conditions.",
            "B. Cannot perform swap because one of the elements is special.",
            "C. After swap, elimination occurs, clearing 3 elements, total cleared becomes 4.",
            "D. After swap, elimination occurs, clearing 5 elements, total cleared becomes 6.",
            "E. After swap, elimination occurs, clearing 3 elements, total cleared becomes 4.",
            "F. After swap, elimination occurs, clearing 4 elements, total cleared becomes 5.",
            "G. After swap, elimination occurs, clearing 2 elements, total cleared becomes 3.",
            "H. After swap, elimination occurs, clearing 1 elements, total cleared becomes 2."
        ]
    },
    {
        "data_id": "jewel2-train-00005-6",
        "qa_type": "ActionOutcome",
        "question_id": 4,
        "question_description": "Simulate swap operation",
        "image": "images/00005.png",
        "state": "states/00005.json",
        "plot_level": "Hard",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute swap 1 0 right?\n\n**Options:**\nA. Nothing will happen because the swap does not meet elimination conditions.\nB. Cannot perform swap because one of the elements is special.\nC. After swap, elimination occurs, clearing 5 elements, total cleared becomes 6.\nD. After swap, elimination occurs, clearing 7 elements, total cleared becomes 8.\nE. After swap, elimination occurs, clearing 6 elements, total cleared becomes 7.\nF. After swap, elimination occurs, clearing 4 elements, total cleared becomes 5.\nG. After swap, elimination occurs, clearing 3 elements, total cleared becomes 4.\nH. After swap, elimination occurs, clearing 8 elements, total cleared becomes 9.",
        "answer": "F",
        "analysis": "Successfully swapped the elements at position (1,0) with (1,1) in the 'right' direction, resulting in the vertical/horizontal elimination of 4 elements because it meets the elimination rule. The total cleared count increased to 5.",
        "options": [
            "A. Nothing will happen because the swap does not meet elimination conditions.",
            "B. Cannot perform swap because one of the elements is special.",
            "C. After swap, elimination occurs, clearing 5 elements, total cleared becomes 6.",
            "D. After swap, elimination occurs, clearing 7 elements, total cleared becomes 8.",
            "E. After swap, elimination occurs, clearing 6 elements, total cleared becomes 7.",
            "F. After swap, elimination occurs, clearing 4 elements, total cleared becomes 5.",
            "G. After swap, elimination occurs, clearing 3 elements, total cleared becomes 4.",
            "H. After swap, elimination occurs, clearing 8 elements, total cleared becomes 9."
        ]
    },
    {
        "data_id": "jewel2-train-00005-7",
        "qa_type": "ActionOutcome",
        "question_id": 5,
        "question_description": "Simulate command sequence",
        "image": "images/00005.png",
        "state": "states/00005.json",
        "plot_level": "Hard",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many elements will be eliminated at least after performing swap 2 4 up followed by swap 3 5 right?",
        "answer": "0",
        "analysis": "Executing `swap 2 4 up` resulted in vertically/horizontally clearing 0 elements, and executing `swap 3 5 right` resulted in vertically/horizontally clearing 0 elements. Overall, a total of 0 elements were cleared."
    },
    {
        "data_id": "jewel2-train-00005-8",
        "qa_type": "ActionOutcome",
        "question_id": 5,
        "question_description": "Simulate command sequence",
        "image": "images/00005.png",
        "state": "states/00005.json",
        "plot_level": "Hard",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many elements will be eliminated at least after performing swap 5 5 up followed by swap 4 0 up?",
        "answer": "3",
        "analysis": "Executing `swap 5 5 up` resulted in vertically/horizontally clearing 0 elements, and executing `swap 4 0 up` resulted in vertically/horizontally clearing 3 elements. Overall, a total of 3 elements were cleared."
    },
    {
        "data_id": "jewel2-train-00005-9",
        "qa_type": "StrategyOptimization",
        "question_id": 6,
        "question_description": "Optimize command choice",
        "image": "images/00005.png",
        "state": "states/00005.json",
        "plot_level": "Hard",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What command will result in the maximum number of elements being cleared in a single move?",
        "answer": "clear 4 2",
        "analysis": "Analysis of all possible clearing moves:\n\n- Command `clear 4 2` will vertically/horizontally clear 11 elements\n- Command `swap 1 0 right` will vertically/horizontally clear 4 elements\n- Command `swap 1 1 left` will vertically/horizontally clear 4 elements\n- Command `swap 1 5 down` will vertically/horizontally clear 4 elements\n- Command `swap 2 5 up` will vertically/horizontally clear 4 elements\n- Command `swap 1 2 right` will vertically/horizontally clear 3 elements\n- Command `swap 1 3 right` will vertically/horizontally clear 3 elements\n- Command `swap 1 3 left` will vertically/horizontally clear 3 elements\n- Command `swap 1 4 left` will vertically/horizontally clear 3 elements\n- Command `swap 2 0 down` will vertically/horizontally clear 3 elements\n- Command `swap 2 1 down` will vertically/horizontally clear 3 elements\n- Command `swap 3 0 up` will vertically/horizontally clear 3 elements\n- Command `swap 3 0 down` will vertically/horizontally clear 3 elements\n- Command `swap 3 0 right` will vertically/horizontally clear 3 elements\n- Command `swap 3 1 up` will vertically/horizontally clear 3 elements\n- Command `swap 3 1 left` will vertically/horizontally clear 3 elements\n- Command `swap 3 3 right` will vertically/horizontally clear 3 elements\n- Command `swap 3 4 left` will vertically/horizontally clear 3 elements\n- Command `swap 4 0 up` will vertically/horizontally clear 3 elements\n- Command `clear 1 2` will vertically/horizontally clear 3 elements\n- Command `clear 1 3` will vertically/horizontally clear 3 elements\n- Command `clear 1 4` will vertically/horizontally clear 3 elements\n\nBest strategy analysis:\nThe optimal move is `clear 4 2`, which will vertically/horizontally clear the maximum number of 11 elements. This is superior to the other 21 possible moves as it results in the highest number of cleared elements."
    },
    {
        "data_id": "jewel2-train-00006-0",
        "qa_type": "StateInfo",
        "question_id": 0,
        "question_description": "Count specific element",
        "image": "images/00006.png",
        "state": "states/00006.json",
        "plot_level": "Hard",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many 'A' elements are currently on the board?",
        "answer": "4",
        "analysis": "By iterating through each row and column of the chessboard, we identified and counted all occurrences of the 'A' element.The 'A' elements are located at the following positions: (2,1), (3,3), (4,0), (4,2).So there are  **4** 'A' in total.\n\n"
    },
    {
        "data_id": "jewel2-train-00006-1",
        "qa_type": "StateInfo",
        "question_id": 1,
        "question_description": "Identify element position",
        "image": "images/00006.png",
        "state": "states/00006.json",
        "plot_level": "Hard",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:**Which of the following positions does element 'B' reside in?\n\n**Options:**\nA. Position (1, 3)\nB. Position (1, 0)\nC. Position (4, 0)\nD. Position (4, 2)\nE. Position (2, 1)\nF. Position (4, 4)\nG. Position (2, 0)\nH. Position (3, 0)",
        "answer": "H",
        "analysis": "The 'B' element is located at the following positions: (0,1), (0,2), (1,2), (1,5), (2,2), (2,4), (3,0), (3,2), (3,4), (4,3), (4,5), (5,0), (5,3), (5,5). Option H refers to position (3, 0), where the 'B' element resides.",
        "options": [
            "A. Position (1, 3)",
            "B. Position (1, 0)",
            "C. Position (4, 0)",
            "D. Position (4, 2)",
            "E. Position (2, 1)",
            "F. Position (4, 4)",
            "G. Position (2, 0)",
            "H. Position (3, 0)"
        ]
    },
    {
        "data_id": "jewel2-train-00006-2",
        "qa_type": "StateInfo",
        "question_id": 2,
        "question_description": "Count special elements",
        "image": "images/00006.png",
        "state": "states/00006.json",
        "plot_level": "Hard",
        "qa_level": "Easy",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many special elements (a, b, c, d, e, +, |) are there on the board?",
        "answer": "1",
        "analysis": "By iterating through the chessboard, we counted all special elements (a, b, c, d, e, +, |).\n\nPositions of special elements:\n- Element 'a': None found\n- Element 'b': None found\n- Element 'c': None found\n- Element 'd': None found\n- Element 'e': None found\n- Element '+': None found\n- Element '|': (2,0)So there are **1** special element in total."
    },
    {
        "data_id": "jewel2-train-00006-3",
        "qa_type": "ActionOutcome",
        "question_id": 3,
        "question_description": "Simulate clear operation",
        "image": "images/00006.png",
        "state": "states/00006.json",
        "plot_level": "Hard",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute clear 0 2?\n\n**Options:**\nA. Nothing will happen because the clear does not meet elimination conditions.\nB. Trigger a special element, total cleared becomes 7.\nC. Perform elimination, eliminate 5 elements, total cleared becomes 8.\nD. Perform elimination, eliminate 4 elements, total cleared becomes 7.\nE. Perform elimination, eliminate 3 elements, total cleared becomes 6.\nF. Perform elimination, eliminate 7 elements, total cleared becomes 10.\nG. Perform elimination, eliminate 8 elements, total cleared becomes 11.\nH. Perform elimination, eliminate 8 elements, total cleared becomes 11.",
        "answer": "D",
        "analysis": "There are 4 'B' elements in a row/column.When executing clear 0 2 they will be eliminated.Clearing the element 'B' at position (0,2) successfully eliminated 4 elements vertically/horizontally, increasing the total cleared count to 7.",
        "options": [
            "A. Nothing will happen because the clear does not meet elimination conditions.",
            "B. Trigger a special element, total cleared becomes 7.",
            "C. Perform elimination, eliminate 5 elements, total cleared becomes 8.",
            "D. Perform elimination, eliminate 4 elements, total cleared becomes 7.",
            "E. Perform elimination, eliminate 3 elements, total cleared becomes 6.",
            "F. Perform elimination, eliminate 7 elements, total cleared becomes 10.",
            "G. Perform elimination, eliminate 8 elements, total cleared becomes 11.",
            "H. Perform elimination, eliminate 8 elements, total cleared becomes 11."
        ]
    },
    {
        "data_id": "jewel2-train-00006-4",
        "qa_type": "ActionOutcome",
        "question_id": 3,
        "question_description": "Simulate clear operation",
        "image": "images/00006.png",
        "state": "states/00006.json",
        "plot_level": "Hard",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute clear 0 2?\n\n**Options:**\nA. Nothing will happen because the clear does not meet elimination conditions.\nB. Trigger a special element, total cleared becomes 7.\nC. Perform elimination, eliminate 2 elements, total cleared becomes 5.\nD. Perform elimination, eliminate 6 elements, total cleared becomes 9.\nE. Perform elimination, eliminate 2 elements, total cleared becomes 5.\nF. Perform elimination, eliminate 2 elements, total cleared becomes 5.\nG. Perform elimination, eliminate 4 elements, total cleared becomes 7.\nH. Perform elimination, eliminate 7 elements, total cleared becomes 10.",
        "answer": "G",
        "analysis": "There are 4 'B' elements in a row/column.When executing clear 0 2 they will be eliminated.Clearing the element 'B' at position (0,2) successfully eliminated 4 elements vertically/horizontally, increasing the total cleared count to 7.",
        "options": [
            "A. Nothing will happen because the clear does not meet elimination conditions.",
            "B. Trigger a special element, total cleared becomes 7.",
            "C. Perform elimination, eliminate 2 elements, total cleared becomes 5.",
            "D. Perform elimination, eliminate 6 elements, total cleared becomes 9.",
            "E. Perform elimination, eliminate 2 elements, total cleared becomes 5.",
            "F. Perform elimination, eliminate 2 elements, total cleared becomes 5.",
            "G. Perform elimination, eliminate 4 elements, total cleared becomes 7.",
            "H. Perform elimination, eliminate 7 elements, total cleared becomes 10."
        ]
    },
    {
        "data_id": "jewel2-train-00006-5",
        "qa_type": "ActionOutcome",
        "question_id": 4,
        "question_description": "Simulate swap operation",
        "image": "images/00006.png",
        "state": "states/00006.json",
        "plot_level": "Hard",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute swap 0 1 right?\n\n**Options:**\nA. Nothing will happen because the swap does not meet elimination conditions.\nB. Cannot perform swap because one of the elements is special.\nC. After swap, elimination occurs, clearing 9 elements, total cleared becomes 12.\nD. After swap, elimination occurs, clearing 3 elements, total cleared becomes 6.\nE. After swap, elimination occurs, clearing 4 elements, total cleared becomes 7.\nF. After swap, elimination occurs, clearing 3 elements, total cleared becomes 6.\nG. After swap, elimination occurs, clearing 1 elements, total cleared becomes 4.\nH. After swap, elimination occurs, clearing 2 elements, total cleared becomes 5.",
        "answer": "E",
        "analysis": "Successfully swapped the elements at position (0,1) with (0,2) in the 'right' direction, resulting in the vertical/horizontal elimination of 4 elements because it meets the elimination rule. The total cleared count increased to 7.",
        "options": [
            "A. Nothing will happen because the swap does not meet elimination conditions.",
            "B. Cannot perform swap because one of the elements is special.",
            "C. After swap, elimination occurs, clearing 9 elements, total cleared becomes 12.",
            "D. After swap, elimination occurs, clearing 3 elements, total cleared becomes 6.",
            "E. After swap, elimination occurs, clearing 4 elements, total cleared becomes 7.",
            "F. After swap, elimination occurs, clearing 3 elements, total cleared becomes 6.",
            "G. After swap, elimination occurs, clearing 1 elements, total cleared becomes 4.",
            "H. After swap, elimination occurs, clearing 2 elements, total cleared becomes 5."
        ]
    },
    {
        "data_id": "jewel2-train-00006-6",
        "qa_type": "ActionOutcome",
        "question_id": 4,
        "question_description": "Simulate swap operation",
        "image": "images/00006.png",
        "state": "states/00006.json",
        "plot_level": "Hard",
        "qa_level": "Medium",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What will happen if you execute swap 0 1 right?\n\n**Options:**\nA. Nothing will happen because the swap does not meet elimination conditions.\nB. Cannot perform swap because one of the elements is special.\nC. After swap, elimination occurs, clearing 7 elements, total cleared becomes 10.\nD. After swap, elimination occurs, clearing 4 elements, total cleared becomes 7.\nE. After swap, elimination occurs, clearing 2 elements, total cleared becomes 5.\nF. After swap, elimination occurs, clearing 5 elements, total cleared becomes 8.\nG. After swap, elimination occurs, clearing 2 elements, total cleared becomes 5.\nH. After swap, elimination occurs, clearing 1 elements, total cleared becomes 4.",
        "answer": "D",
        "analysis": "Successfully swapped the elements at position (0,1) with (0,2) in the 'right' direction, resulting in the vertical/horizontal elimination of 4 elements because it meets the elimination rule. The total cleared count increased to 7.",
        "options": [
            "A. Nothing will happen because the swap does not meet elimination conditions.",
            "B. Cannot perform swap because one of the elements is special.",
            "C. After swap, elimination occurs, clearing 7 elements, total cleared becomes 10.",
            "D. After swap, elimination occurs, clearing 4 elements, total cleared becomes 7.",
            "E. After swap, elimination occurs, clearing 2 elements, total cleared becomes 5.",
            "F. After swap, elimination occurs, clearing 5 elements, total cleared becomes 8.",
            "G. After swap, elimination occurs, clearing 2 elements, total cleared becomes 5.",
            "H. After swap, elimination occurs, clearing 1 elements, total cleared becomes 4."
        ]
    },
    {
        "data_id": "jewel2-train-00006-7",
        "qa_type": "ActionOutcome",
        "question_id": 5,
        "question_description": "Simulate command sequence",
        "image": "images/00006.png",
        "state": "states/00006.json",
        "plot_level": "Hard",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many elements will be eliminated at least after performing clear 3 2 followed by swap 5 1 left?",
        "answer": "4",
        "analysis": "Executing `clear 3 2` resulted in vertically/horizontally clearing 4 elements, and executing `swap 5 1 left` resulted in vertically/horizontally clearing 0 elements. Overall, a total of 4 elements were cleared."
    },
    {
        "data_id": "jewel2-train-00006-8",
        "qa_type": "ActionOutcome",
        "question_id": 5,
        "question_description": "Simulate command sequence",
        "image": "images/00006.png",
        "state": "states/00006.json",
        "plot_level": "Hard",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** How many elements will be eliminated at least after performing swap 3 5 left followed by swap 5 5 right?",
        "answer": "3",
        "analysis": "Executing `swap 3 5 left` resulted in vertically/horizontally clearing 3 elements, and executing `swap 5 5 right` resulted in vertically/horizontally clearing 0 elements. Overall, a total of 3 elements were cleared."
    },
    {
        "data_id": "jewel2-train-00006-9",
        "qa_type": "StrategyOptimization",
        "question_id": 6,
        "question_description": "Optimize command choice",
        "image": "images/00006.png",
        "state": "states/00006.json",
        "plot_level": "Hard",
        "qa_level": "Hard",
        "question": "\n# **Game Overview**\nJewel2 is a strategic puzzle game played on a grid. Your primary objective is to eliminate elements by forming horizontal or vertical lines of three or more identical items. Successfully eliminating elements increases your score and clears space on the board for new elements to appear.\n\n# **Elements**\n## **Basic Elements**\n- **A, B, C, D, E**\n  - **Description**: These are the standard elements in the game.\n  - **Shape**: Diamond-shaped gems in various colors (Red, Green, Blue, Yellow, Purple).\n    - A: Red\n    - B: Green\n    - C: Blue\n    - D: Yellow\n    - E: Purple\n  - **Interactions**:\n    - **Clearing**: When three or more identical basic elements align horizontally or vertically, they are eliminated from the board.\n    - **Swapping**: Basic elements can be swapped with adjacent basic elements to form eliminations.\n\n## **Special Elements**\n- **a, b, c, d, e, +, |**\n  - **Description**: These elements possess unique abilities that trigger specific elimination patterns when activated.\n  - **Shape**:\n    - **a, b, c, d, e**: Round gems in various colors (Red, Green, Blue, Yellow, Purple).\n        - a: Red\n        - b: Green\n        - c: Blue\n        - d: Yellow\n        - e: Purple\n    - **+**: A round black gem with low transparency.\n    - **|**: A tall, rectangular cyan gem.\n  - **Effects of Special Elements**:\n    - **a, b, c, d, e**:\n      - **Function**: Clearing one of these removes all corresponding uppercase basic elements from the board.\n        - *Example*: Clearing element 'a' will eliminate all 'A's on the board.\n    - **| (Vertical Clear)**:\n      - **Function**: Activating this element clears all elements in its vertical column.\n    - **+ (Surrounding Clear)**:\n      - **Function**: Activating this element clears all elements within a distance of 1 from its position, including diagonals.\n  \n  - **Notes**:\n    - Special elements do **not** trigger further eliminations if they remove other special elements.\n    - Swapping involving special elements is **not allowed** and will be rejected by the game.\n\n# **Commands**\n## **Available Operations**\n1. **Clear Operation**\n   - **Syntax**: clear x y\n   - **Description**: Attempts to clear the element located at coordinates (x, y).\n   - **Conditions**:\n     - The targeted element must form a valid elimination (i.e., be part of a horizontal or vertical line of three or more identical elements).\n     - If the element is special, its unique ability is activated upon clearing.\n   - **State Changes**:\n     - **Basic Element**: If the clearance is valid, the element(s) are removed, the score (Total Cleared) increases accordingly, and new elements fall into place to fill the gaps.\n     - **Special Element**: Activating a special element triggers its specific clearance effect as described above.\n\n2. **Swap Operation**\n   - **Syntax**: swap x y pos\n   - **Parameters**:\n     - (x, y): Coordinates of the element to be swapped.\n     - pos: Direction to swap the element (up, down, left, right).\n   - **Description**: Swaps the element at (x, y) with the adjacent element in the specified direction.\n     - **pos** can be one of four directions:\n       - **up**: Swap with the element directly above (in the same column but one row above).\n       - **down**: Swap with the element directly below (in the same column but one row below).\n       - **left**: Swap with the element directly to the left (in the same row but one column left).\n       - **right**: Swap with the element directly to the right (in the same row but one column right).\n   - **Conditions**:\n     - Both elements involved in the swap must be basic elements. Swaps involving special elements are rejected.\n     - The swap must result in a valid elimination; otherwise, the swap is undone.\n   - **State Changes**:\n     - **Successful Swap**: Elements are exchanged, any resulting eliminations are performed, and the score (Total Cleared) is updated accordingly.\n     - **Unsuccessful Swap**: Elements revert to their original positions, and no changes are made to the score.\n\n# **Coordinate System**\n- The board uses **0-based coordinates**.\n- **Top-left cell**: (0, 0)\n- **Bottom-right cell**: ({size_minus_one}, {size_minus_one})\n\n### **Coordinate Explanation**:\n  - **x (Row)**: Represents the **row number** of the element. Rows are numbered from **top to bottom**, starting from 0.\n    - *Example*: In a 5x5 grid, the first row (topmost) would have x = 0, the second row would have x = 1, and so on.\n  - **y (Column)**: Represents the **column number** of the element. Columns are numbered from **left to right**, starting from 0.\n    - *Example*: In a 5x5 grid, the first column (leftmost) would have y = 0, the second column would have y = 1, and so on.\n\n### **Coordinate Example**:\n  - To refer to the element located in the second row and third column, you would use coordinates (1, 2).\n  - To refer to the element in the fifth row and the first column, you would use coordinates (4, 0).\n\n# **Gameplay Mechanics**\n## **Score Tracking**\n- **Total Cleared**: Represents the cumulative number of elements that have been eliminated throughout the game.\n  - **Incremented By**: The number of elements cleared in each successful operation (clear or swap).\n\n# **Objective**\nMaximize your **Total Cleared** count by strategically performing clear and swap operations to eliminate as many elements as possible. Effective use of special elements can significantly enhance your score by triggering large-scale eliminations.\n\n# **How to Play**\n## **Starting the Game**\n1. **Initialization**:\n   - Upon launching Jewel2, a grid is presented, populated with a mix of basic and special elements based on predefined probabilities.\n\n2. **Understanding the Interface**:\n   - **Grid Display**: Each cell in the grid represents an element. Basic elements are denoted by uppercase letters (A-E), while special elements use lowercase letters or symbols (a, b, c, d, e, +, |).\n   - **Score Display**: The current **Total Cleared** count is visible, updating as you eliminate elements.\n   - **Command Input**: A text input area is provided where you can enter commands (clear or swap) to interact with the game.\n\n## **Performing Operations**\n1. **Clear Operation**:\n   - **Objective**: Remove specific elements to form or extend lines of three or more identical elements.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to clear.\n     - Enter the command in the format: clear x y.\n     - Example: To clear the element at row 2, column 3, input clear 2 3.\n   - **Outcomes**:\n     - **Successful Clear**: If the targeted element is part of a valid elimination, it and any adjacent identical elements are removed, the **Total Cleared** score increases by the number of elements cleared, and new elements fall into place.\n     - **Special Element Activation**: If a special element is cleared, its unique ability is triggered, resulting in additional eliminations as defined in the **Special Elements** section.\n     - **Unsuccessful Clear**: If the targeted element does not form a valid elimination, no changes occur, and the command is rejected.\n\n2. **Swap Operation**:\n   - **Objective**: Rearrange elements to create new elimination opportunities.\n   - **How to Execute**:\n     - Identify the coordinates (x, y) of the element you wish to swap.\n     - Determine the direction pos (up, down, left, right) to which you want to swap the element.\n     - Enter the command in the format: swap x y pos.\n     - Example: To swap the element at row 1, column 1 with the element above it, input swap 1 1 up.\n   - **Outcomes**:\n     - **Successful Swap**: If the swap results in a valid elimination, the elements are exchanged, the resulting eliminations are performed, and the **Total Cleared** score is updated accordingly.\n     - **Unsuccessful Swap**: If the swap does not create any valid elimination or involves special elements, the swap is undone, and no changes are made to the score.\n\n# **Additional Notes**\n- **Special Element Chain Reactions**: Activating a special element's ability will **not** trigger further eliminations, even if other special elements are removed as a result.\n- **Element Replenishment**: After each elimination, new elements are generated randomly to maintain a fully populated board, ensuring continuous gameplay.\n- **Row and Column Elimination**: When checking whether an ordinary element can be eliminated, we check whether its rows and columns have three or more identical elements. If both rows and columns meet the elimination rule, both rows and columns are eliminated.\n- **Chain Elimination**: After the elimination operation is performed and new elements are generated, no chain elimination will occur.\n\n\n**Question:** What command will result in the maximum number of elements being cleared in a single move?",
        "answer": "swap 1 4 right",
        "analysis": "Analysis of all possible clearing moves:\n\n- Command `swap 1 4 right` will vertically/horizontally clear 6 elements\n- Command `swap 1 5 left` will vertically/horizontally clear 6 elements\n- Command `clear 2 0` will vertically/horizontally clear 6 elements\n- Command `swap 4 2 right` will vertically/horizontally clear 5 elements\n- Command `swap 4 3 left` will vertically/horizontally clear 5 elements\n- Command `swap 0 1 right` will vertically/horizontally clear 4 elements\n- Command `swap 0 2 down` will vertically/horizontally clear 4 elements\n- Command `swap 0 2 left` will vertically/horizontally clear 4 elements\n- Command `swap 1 2 up` will vertically/horizontally clear 4 elements\n- Command `swap 1 2 down` will vertically/horizontally clear 4 elements\n- Command `swap 2 2 up` will vertically/horizontally clear 4 elements\n- Command `swap 2 2 down` will vertically/horizontally clear 4 elements\n- Command `swap 3 2 up` will vertically/horizontally clear 4 elements\n- Command `clear 0 2` will vertically/horizontally clear 4 elements\n- Command `clear 1 2` will vertically/horizontally clear 4 elements\n- Command `clear 2 2` will vertically/horizontally clear 4 elements\n- Command `clear 3 2` will vertically/horizontally clear 4 elements\n- Command `swap 1 5 down` will vertically/horizontally clear 3 elements\n- Command `swap 2 4 right` will vertically/horizontally clear 3 elements\n- Command `swap 2 5 up` will vertically/horizontally clear 3 elements\n- Command `swap 2 5 left` will vertically/horizontally clear 3 elements\n- Command `swap 3 2 right` will vertically/horizontally clear 3 elements\n- Command `swap 3 3 down` will vertically/horizontally clear 3 elements\n- Command `swap 3 3 right` will vertically/horizontally clear 3 elements\n- Command `swap 3 3 left` will vertically/horizontally clear 3 elements\n- Command `swap 3 4 down` will vertically/horizontally clear 3 elements\n- Command `swap 3 4 right` will vertically/horizontally clear 3 elements\n- Command `swap 3 4 left` will vertically/horizontally clear 3 elements\n- Command `swap 3 5 left` will vertically/horizontally clear 3 elements\n- Command `swap 4 3 up` will vertically/horizontally clear 3 elements\n- Command `swap 4 3 right` will vertically/horizontally clear 3 elements\n- Command `swap 4 4 up` will vertically/horizontally clear 3 elements\n- Command `swap 4 4 right` will vertically/horizontally clear 3 elements\n- Command `swap 4 4 left` will vertically/horizontally clear 3 elements\n- Command `swap 4 5 left` will vertically/horizontally clear 3 elements\n\nBest strategy analysis:\nThe optimal move is `swap 1 4 right`, which will vertically/horizontally clear the maximum number of 6 elements. This is superior to the other 34 possible moves as it results in the highest number of cleared elements."
    }
]